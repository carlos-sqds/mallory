# Test: New User with Dynamic Email (Fresh Account Every Time)
# Uses Mailosaur's wildcard email feature to generate unique emails
# 
# How it works:
# - Mailosaur accepts ANY email to @7kboxsdj.mailosaur.net
# - test-UUID@7kboxsdj.mailosaur.net goes to your inbox
# - Each test run uses a unique UUID = fresh user every time
#
# Use cases:
# - Testing first-time user signup flow
# - Testing beginner â†’ advanced migration
# - Ensuring clean state (no cached sessions)
#
# Prerequisites:
# - Backend server running
# - Mailosaur credentials in secrets

appId: ${APP_ID}
tags:
  - auth
  - new-user
  - dynamic-email
  - mailosaur

---

# Generate unique email for this test run
# Mailosaur wildcard: anything@7kboxsdj.mailosaur.net works!
- runScript: |
    # Generate UUID for unique email
    UUID=$(uuidgen | tr '[:upper:]' '[:lower:]')
    DYNAMIC_EMAIL="test-${UUID}@7kboxsdj.mailosaur.net"
    echo "$DYNAMIC_EMAIL"
    
    # Save for later steps
    echo "$DYNAMIC_EMAIL" > /tmp/maestro-test-email.txt

# Store the email in a variable
- runScript: cat /tmp/maestro-test-email.txt
- evalScript: ${output.stdout}
  
# Now we have a unique email in ${output.stdout}

# Start login screen
- assertVisible: "Continue with Google"

# Tap sign in
- tapOn: "Continue with Google"
- waitForAnimationToEnd:
    timeout: 30000

# OAuth (first time, needs manual Google sign-in)
# On subsequent runs, Google session is cached

# Wait for OTP modal
- assertVisible:
    text: "Enter verification code"
    timeout: 30000

# Give Grid time to send email
- waitForAnimationToEnd:
    timeout: 5000

# Fetch OTP from Mailosaur for this dynamic email
- runScript: |
    DYNAMIC_EMAIL=$(cat /tmp/maestro-test-email.txt)
    cd apps/client
    bun maestro-mailosaur-otp.ts "$DYNAMIC_EMAIL" &

# Wait for OTP file (script is fetching from Mailosaur)
- runScript: |
    for i in {1..120}; do
      if [ -f apps/client/.maestro/.latest-otp ]; then
        cat apps/client/.maestro/.latest-otp
        exit 0
      fi
      sleep 1
    done
    echo "TIMEOUT"
    exit 1

# Enter the OTP
- inputText: ${output.stdout}

# Verify
- tapOn: "Verify"
- waitForAnimationToEnd:
    timeout: 15000

# Should land on chat (first-time user)
- assertVisible: "Chat"

# Cleanup
- runScript: |
    rm -f apps/client/.maestro/.latest-otp
    rm -f /tmp/maestro-test-email.txt

# SUCCESS! Brand new user created and verified!

